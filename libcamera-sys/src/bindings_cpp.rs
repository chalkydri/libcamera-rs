/* automatically generated by rust-bindgen 0.71.1 */

#[allow(non_snake_case, non_camel_case_types, non_upper_case_globals)]
pub mod root {
    #[allow(unused_imports)]
    use self::super::root;
    pub mod std {
        #[allow(unused_imports)]
        use self::super::super::root;
        pub mod __detail {
            #[allow(unused_imports)]
            use self::super::super::super::root;
        }
    }
    pub mod __gnu_cxx {
        #[allow(unused_imports)]
        use self::super::super::root;
    }
    pub mod __pstl {
        #[allow(unused_imports)]
        use self::super::super::root;
        pub mod execution {
            #[allow(unused_imports)]
            use self::super::super::super::root;
        }
    }
    pub mod libcamera {
        #[allow(unused_imports)]
        use self::super::super::root;
        pub mod controls {
            #[allow(unused_imports)]
            use self::super::super::super::root;
            pub const controls_AE_ENABLE: root::libcamera::controls::_bindgen_ty_1 = 1;
            pub const controls_AE_LOCKED: root::libcamera::controls::_bindgen_ty_1 = 2;
            pub const controls_AE_METERING_MODE: root::libcamera::controls::_bindgen_ty_1 = 3;
            pub const controls_AE_CONSTRAINT_MODE: root::libcamera::controls::_bindgen_ty_1 = 4;
            pub const controls_AE_EXPOSURE_MODE: root::libcamera::controls::_bindgen_ty_1 = 5;
            pub const controls_EXPOSURE_VALUE: root::libcamera::controls::_bindgen_ty_1 = 6;
            pub const controls_EXPOSURE_TIME: root::libcamera::controls::_bindgen_ty_1 = 7;
            pub const controls_ANALOGUE_GAIN: root::libcamera::controls::_bindgen_ty_1 = 8;
            pub const controls_AE_FLICKER_MODE: root::libcamera::controls::_bindgen_ty_1 = 9;
            pub const controls_AE_FLICKER_PERIOD: root::libcamera::controls::_bindgen_ty_1 = 10;
            pub const controls_AE_FLICKER_DETECTED: root::libcamera::controls::_bindgen_ty_1 = 11;
            pub const controls_BRIGHTNESS: root::libcamera::controls::_bindgen_ty_1 = 12;
            pub const controls_CONTRAST: root::libcamera::controls::_bindgen_ty_1 = 13;
            pub const controls_LUX: root::libcamera::controls::_bindgen_ty_1 = 14;
            pub const controls_AWB_ENABLE: root::libcamera::controls::_bindgen_ty_1 = 15;
            pub const controls_AWB_MODE: root::libcamera::controls::_bindgen_ty_1 = 16;
            pub const controls_AWB_LOCKED: root::libcamera::controls::_bindgen_ty_1 = 17;
            pub const controls_COLOUR_GAINS: root::libcamera::controls::_bindgen_ty_1 = 18;
            pub const controls_COLOUR_TEMPERATURE: root::libcamera::controls::_bindgen_ty_1 = 19;
            pub const controls_SATURATION: root::libcamera::controls::_bindgen_ty_1 = 20;
            pub const controls_SENSOR_BLACK_LEVELS: root::libcamera::controls::_bindgen_ty_1 = 21;
            pub const controls_SHARPNESS: root::libcamera::controls::_bindgen_ty_1 = 22;
            pub const controls_FOCUS_FO_M: root::libcamera::controls::_bindgen_ty_1 = 23;
            pub const controls_COLOUR_CORRECTION_MATRIX: root::libcamera::controls::_bindgen_ty_1 = 24;
            pub const controls_SCALER_CROP: root::libcamera::controls::_bindgen_ty_1 = 25;
            pub const controls_DIGITAL_GAIN: root::libcamera::controls::_bindgen_ty_1 = 26;
            pub const controls_FRAME_DURATION: root::libcamera::controls::_bindgen_ty_1 = 27;
            pub const controls_FRAME_DURATION_LIMITS: root::libcamera::controls::_bindgen_ty_1 = 28;
            pub const controls_SENSOR_TEMPERATURE: root::libcamera::controls::_bindgen_ty_1 = 29;
            pub const controls_SENSOR_TIMESTAMP: root::libcamera::controls::_bindgen_ty_1 = 30;
            pub const controls_AF_MODE: root::libcamera::controls::_bindgen_ty_1 = 31;
            pub const controls_AF_RANGE: root::libcamera::controls::_bindgen_ty_1 = 32;
            pub const controls_AF_SPEED: root::libcamera::controls::_bindgen_ty_1 = 33;
            pub const controls_AF_METERING: root::libcamera::controls::_bindgen_ty_1 = 34;
            pub const controls_AF_WINDOWS: root::libcamera::controls::_bindgen_ty_1 = 35;
            pub const controls_AF_TRIGGER: root::libcamera::controls::_bindgen_ty_1 = 36;
            pub const controls_AF_PAUSE: root::libcamera::controls::_bindgen_ty_1 = 37;
            pub const controls_LENS_POSITION: root::libcamera::controls::_bindgen_ty_1 = 38;
            pub const controls_AF_STATE: root::libcamera::controls::_bindgen_ty_1 = 39;
            pub const controls_AF_PAUSE_STATE: root::libcamera::controls::_bindgen_ty_1 = 40;
            pub const controls_HDR_MODE: root::libcamera::controls::_bindgen_ty_1 = 41;
            pub const controls_HDR_CHANNEL: root::libcamera::controls::_bindgen_ty_1 = 42;
            pub const controls_GAMMA: root::libcamera::controls::_bindgen_ty_1 = 43;
            pub const controls_DEBUG_METADATA_ENABLE: root::libcamera::controls::_bindgen_ty_1 = 44;
            pub const controls_FRAME_WALL_CLOCK: root::libcamera::controls::_bindgen_ty_1 = 45;
            pub type _bindgen_ty_1 = ::std::os::raw::c_uint;
            pub const AeMeteringModeEnum_MeteringCentreWeighted: root::libcamera::controls::AeMeteringModeEnum = 0;
            pub const AeMeteringModeEnum_MeteringSpot: root::libcamera::controls::AeMeteringModeEnum = 1;
            pub const AeMeteringModeEnum_MeteringMatrix: root::libcamera::controls::AeMeteringModeEnum = 2;
            pub const AeMeteringModeEnum_MeteringCustom: root::libcamera::controls::AeMeteringModeEnum = 3;
            pub type AeMeteringModeEnum = ::std::os::raw::c_uint;
            pub const AeConstraintModeEnum_ConstraintNormal: root::libcamera::controls::AeConstraintModeEnum = 0;
            pub const AeConstraintModeEnum_ConstraintHighlight: root::libcamera::controls::AeConstraintModeEnum = 1;
            pub const AeConstraintModeEnum_ConstraintShadows: root::libcamera::controls::AeConstraintModeEnum = 2;
            pub const AeConstraintModeEnum_ConstraintCustom: root::libcamera::controls::AeConstraintModeEnum = 3;
            pub type AeConstraintModeEnum = ::std::os::raw::c_uint;
            pub const AeExposureModeEnum_ExposureNormal: root::libcamera::controls::AeExposureModeEnum = 0;
            pub const AeExposureModeEnum_ExposureShort: root::libcamera::controls::AeExposureModeEnum = 1;
            pub const AeExposureModeEnum_ExposureLong: root::libcamera::controls::AeExposureModeEnum = 2;
            pub const AeExposureModeEnum_ExposureCustom: root::libcamera::controls::AeExposureModeEnum = 3;
            pub type AeExposureModeEnum = ::std::os::raw::c_uint;
            pub const AeFlickerModeEnum_FlickerOff: root::libcamera::controls::AeFlickerModeEnum = 0;
            pub const AeFlickerModeEnum_FlickerManual: root::libcamera::controls::AeFlickerModeEnum = 1;
            pub const AeFlickerModeEnum_FlickerAuto: root::libcamera::controls::AeFlickerModeEnum = 2;
            pub type AeFlickerModeEnum = ::std::os::raw::c_uint;
            pub const AwbModeEnum_AwbAuto: root::libcamera::controls::AwbModeEnum = 0;
            pub const AwbModeEnum_AwbIncandescent: root::libcamera::controls::AwbModeEnum = 1;
            pub const AwbModeEnum_AwbTungsten: root::libcamera::controls::AwbModeEnum = 2;
            pub const AwbModeEnum_AwbFluorescent: root::libcamera::controls::AwbModeEnum = 3;
            pub const AwbModeEnum_AwbIndoor: root::libcamera::controls::AwbModeEnum = 4;
            pub const AwbModeEnum_AwbDaylight: root::libcamera::controls::AwbModeEnum = 5;
            pub const AwbModeEnum_AwbCloudy: root::libcamera::controls::AwbModeEnum = 6;
            pub const AwbModeEnum_AwbCustom: root::libcamera::controls::AwbModeEnum = 7;
            pub type AwbModeEnum = ::std::os::raw::c_uint;
            pub const AfModeEnum_AfModeManual: root::libcamera::controls::AfModeEnum = 0;
            pub const AfModeEnum_AfModeAuto: root::libcamera::controls::AfModeEnum = 1;
            pub const AfModeEnum_AfModeContinuous: root::libcamera::controls::AfModeEnum = 2;
            pub type AfModeEnum = ::std::os::raw::c_uint;
            pub const AfRangeEnum_AfRangeNormal: root::libcamera::controls::AfRangeEnum = 0;
            pub const AfRangeEnum_AfRangeMacro: root::libcamera::controls::AfRangeEnum = 1;
            pub const AfRangeEnum_AfRangeFull: root::libcamera::controls::AfRangeEnum = 2;
            pub type AfRangeEnum = ::std::os::raw::c_uint;
            pub const AfSpeedEnum_AfSpeedNormal: root::libcamera::controls::AfSpeedEnum = 0;
            pub const AfSpeedEnum_AfSpeedFast: root::libcamera::controls::AfSpeedEnum = 1;
            pub type AfSpeedEnum = ::std::os::raw::c_uint;
            pub const AfMeteringEnum_AfMeteringAuto: root::libcamera::controls::AfMeteringEnum = 0;
            pub const AfMeteringEnum_AfMeteringWindows: root::libcamera::controls::AfMeteringEnum = 1;
            pub type AfMeteringEnum = ::std::os::raw::c_uint;
            pub const AfTriggerEnum_AfTriggerStart: root::libcamera::controls::AfTriggerEnum = 0;
            pub const AfTriggerEnum_AfTriggerCancel: root::libcamera::controls::AfTriggerEnum = 1;
            pub type AfTriggerEnum = ::std::os::raw::c_uint;
            pub const AfPauseEnum_AfPauseImmediate: root::libcamera::controls::AfPauseEnum = 0;
            pub const AfPauseEnum_AfPauseDeferred: root::libcamera::controls::AfPauseEnum = 1;
            pub const AfPauseEnum_AfPauseResume: root::libcamera::controls::AfPauseEnum = 2;
            pub type AfPauseEnum = ::std::os::raw::c_uint;
            pub const AfStateEnum_AfStateIdle: root::libcamera::controls::AfStateEnum = 0;
            pub const AfStateEnum_AfStateScanning: root::libcamera::controls::AfStateEnum = 1;
            pub const AfStateEnum_AfStateFocused: root::libcamera::controls::AfStateEnum = 2;
            pub const AfStateEnum_AfStateFailed: root::libcamera::controls::AfStateEnum = 3;
            pub type AfStateEnum = ::std::os::raw::c_uint;
            pub const AfPauseStateEnum_AfPauseStateRunning: root::libcamera::controls::AfPauseStateEnum = 0;
            pub const AfPauseStateEnum_AfPauseStatePausing: root::libcamera::controls::AfPauseStateEnum = 1;
            pub const AfPauseStateEnum_AfPauseStatePaused: root::libcamera::controls::AfPauseStateEnum = 2;
            pub type AfPauseStateEnum = ::std::os::raw::c_uint;
            pub const HdrModeEnum_HdrModeOff: root::libcamera::controls::HdrModeEnum = 0;
            pub const HdrModeEnum_HdrModeMultiExposureUnmerged: root::libcamera::controls::HdrModeEnum = 1;
            pub const HdrModeEnum_HdrModeMultiExposure: root::libcamera::controls::HdrModeEnum = 2;
            pub const HdrModeEnum_HdrModeSingleExposure: root::libcamera::controls::HdrModeEnum = 3;
            pub const HdrModeEnum_HdrModeNight: root::libcamera::controls::HdrModeEnum = 4;
            pub type HdrModeEnum = ::std::os::raw::c_uint;
            pub const HdrChannelEnum_HdrChannelNone: root::libcamera::controls::HdrChannelEnum = 0;
            pub const HdrChannelEnum_HdrChannelShort: root::libcamera::controls::HdrChannelEnum = 1;
            pub const HdrChannelEnum_HdrChannelMedium: root::libcamera::controls::HdrChannelEnum = 2;
            pub const HdrChannelEnum_HdrChannelLong: root::libcamera::controls::HdrChannelEnum = 3;
            pub type HdrChannelEnum = ::std::os::raw::c_uint;
            pub mod draft {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                pub const draft_AE_PRECAPTURE_TRIGGER: root::libcamera::controls::draft::_bindgen_ty_1 = 10001;
                pub const draft_NOISE_REDUCTION_MODE: root::libcamera::controls::draft::_bindgen_ty_1 = 10002;
                pub const draft_COLOR_CORRECTION_ABERRATION_MODE: root::libcamera::controls::draft::_bindgen_ty_1 =
                    10003;
                pub const draft_AE_STATE: root::libcamera::controls::draft::_bindgen_ty_1 = 10004;
                pub const draft_AWB_STATE: root::libcamera::controls::draft::_bindgen_ty_1 = 10005;
                pub const draft_SENSOR_ROLLING_SHUTTER_SKEW: root::libcamera::controls::draft::_bindgen_ty_1 = 10006;
                pub const draft_LENS_SHADING_MAP_MODE: root::libcamera::controls::draft::_bindgen_ty_1 = 10007;
                pub const draft_PIPELINE_DEPTH: root::libcamera::controls::draft::_bindgen_ty_1 = 10008;
                pub const draft_MAX_LATENCY: root::libcamera::controls::draft::_bindgen_ty_1 = 10009;
                pub const draft_TEST_PATTERN_MODE: root::libcamera::controls::draft::_bindgen_ty_1 = 10010;
                pub const draft_FACE_DETECT_MODE: root::libcamera::controls::draft::_bindgen_ty_1 = 10011;
                pub const draft_FACE_DETECT_FACE_RECTANGLES: root::libcamera::controls::draft::_bindgen_ty_1 = 10012;
                pub const draft_FACE_DETECT_FACE_SCORES: root::libcamera::controls::draft::_bindgen_ty_1 = 10013;
                pub const draft_FACE_DETECT_FACE_LANDMARKS: root::libcamera::controls::draft::_bindgen_ty_1 = 10014;
                pub const draft_FACE_DETECT_FACE_IDS: root::libcamera::controls::draft::_bindgen_ty_1 = 10015;
                pub type _bindgen_ty_1 = ::std::os::raw::c_uint;
                pub const AePrecaptureTriggerEnum_AePrecaptureTriggerIdle:
                    root::libcamera::controls::draft::AePrecaptureTriggerEnum = 0;
                pub const AePrecaptureTriggerEnum_AePrecaptureTriggerStart:
                    root::libcamera::controls::draft::AePrecaptureTriggerEnum = 1;
                pub const AePrecaptureTriggerEnum_AePrecaptureTriggerCancel:
                    root::libcamera::controls::draft::AePrecaptureTriggerEnum = 2;
                pub type AePrecaptureTriggerEnum = ::std::os::raw::c_uint;
                pub const NoiseReductionModeEnum_NoiseReductionModeOff:
                    root::libcamera::controls::draft::NoiseReductionModeEnum = 0;
                pub const NoiseReductionModeEnum_NoiseReductionModeFast:
                    root::libcamera::controls::draft::NoiseReductionModeEnum = 1;
                pub const NoiseReductionModeEnum_NoiseReductionModeHighQuality:
                    root::libcamera::controls::draft::NoiseReductionModeEnum = 2;
                pub const NoiseReductionModeEnum_NoiseReductionModeMinimal:
                    root::libcamera::controls::draft::NoiseReductionModeEnum = 3;
                pub const NoiseReductionModeEnum_NoiseReductionModeZSL:
                    root::libcamera::controls::draft::NoiseReductionModeEnum = 4;
                pub type NoiseReductionModeEnum = ::std::os::raw::c_uint;
                pub const ColorCorrectionAberrationModeEnum_ColorCorrectionAberrationOff:
                    root::libcamera::controls::draft::ColorCorrectionAberrationModeEnum = 0;
                pub const ColorCorrectionAberrationModeEnum_ColorCorrectionAberrationFast:
                    root::libcamera::controls::draft::ColorCorrectionAberrationModeEnum = 1;
                pub const ColorCorrectionAberrationModeEnum_ColorCorrectionAberrationHighQuality:
                    root::libcamera::controls::draft::ColorCorrectionAberrationModeEnum = 2;
                pub type ColorCorrectionAberrationModeEnum = ::std::os::raw::c_uint;
                pub const AeStateEnum_AeStateInactive: root::libcamera::controls::draft::AeStateEnum = 0;
                pub const AeStateEnum_AeStateSearching: root::libcamera::controls::draft::AeStateEnum = 1;
                pub const AeStateEnum_AeStateConverged: root::libcamera::controls::draft::AeStateEnum = 2;
                pub const AeStateEnum_AeStateLocked: root::libcamera::controls::draft::AeStateEnum = 3;
                pub const AeStateEnum_AeStateFlashRequired: root::libcamera::controls::draft::AeStateEnum = 4;
                pub const AeStateEnum_AeStatePrecapture: root::libcamera::controls::draft::AeStateEnum = 5;
                pub type AeStateEnum = ::std::os::raw::c_uint;
                pub const AwbStateEnum_AwbStateInactive: root::libcamera::controls::draft::AwbStateEnum = 0;
                pub const AwbStateEnum_AwbStateSearching: root::libcamera::controls::draft::AwbStateEnum = 1;
                pub const AwbStateEnum_AwbConverged: root::libcamera::controls::draft::AwbStateEnum = 2;
                pub const AwbStateEnum_AwbLocked: root::libcamera::controls::draft::AwbStateEnum = 3;
                pub type AwbStateEnum = ::std::os::raw::c_uint;
                pub const LensShadingMapModeEnum_LensShadingMapModeOff:
                    root::libcamera::controls::draft::LensShadingMapModeEnum = 0;
                pub const LensShadingMapModeEnum_LensShadingMapModeOn:
                    root::libcamera::controls::draft::LensShadingMapModeEnum = 1;
                pub type LensShadingMapModeEnum = ::std::os::raw::c_uint;
                pub const TestPatternModeEnum_TestPatternModeOff:
                    root::libcamera::controls::draft::TestPatternModeEnum = 0;
                pub const TestPatternModeEnum_TestPatternModeSolidColor:
                    root::libcamera::controls::draft::TestPatternModeEnum = 1;
                pub const TestPatternModeEnum_TestPatternModeColorBars:
                    root::libcamera::controls::draft::TestPatternModeEnum = 2;
                pub const TestPatternModeEnum_TestPatternModeColorBarsFadeToGray:
                    root::libcamera::controls::draft::TestPatternModeEnum = 3;
                pub const TestPatternModeEnum_TestPatternModePn9:
                    root::libcamera::controls::draft::TestPatternModeEnum = 4;
                pub const TestPatternModeEnum_TestPatternModeCustom1:
                    root::libcamera::controls::draft::TestPatternModeEnum = 256;
                pub type TestPatternModeEnum = ::std::os::raw::c_uint;
                pub const FaceDetectModeEnum_FaceDetectModeOff: root::libcamera::controls::draft::FaceDetectModeEnum =
                    0;
                pub const FaceDetectModeEnum_FaceDetectModeSimple:
                    root::libcamera::controls::draft::FaceDetectModeEnum = 1;
                pub const FaceDetectModeEnum_FaceDetectModeFull: root::libcamera::controls::draft::FaceDetectModeEnum =
                    2;
                pub type FaceDetectModeEnum = ::std::os::raw::c_uint;
            }
        }
        pub mod properties {
            #[allow(unused_imports)]
            use self::super::super::super::root;
            pub const properties_LOCATION: root::libcamera::properties::_bindgen_ty_1 = 1;
            pub const properties_ROTATION: root::libcamera::properties::_bindgen_ty_1 = 2;
            pub const properties_MODEL: root::libcamera::properties::_bindgen_ty_1 = 3;
            pub const properties_UNIT_CELL_SIZE: root::libcamera::properties::_bindgen_ty_1 = 4;
            pub const properties_PIXEL_ARRAY_SIZE: root::libcamera::properties::_bindgen_ty_1 = 5;
            pub const properties_PIXEL_ARRAY_OPTICAL_BLACK_RECTANGLES: root::libcamera::properties::_bindgen_ty_1 = 6;
            pub const properties_PIXEL_ARRAY_ACTIVE_AREAS: root::libcamera::properties::_bindgen_ty_1 = 7;
            pub const properties_SCALER_CROP_MAXIMUM: root::libcamera::properties::_bindgen_ty_1 = 8;
            pub const properties_SENSOR_SENSITIVITY: root::libcamera::properties::_bindgen_ty_1 = 9;
            pub const properties_SYSTEM_DEVICES: root::libcamera::properties::_bindgen_ty_1 = 10;
            pub type _bindgen_ty_1 = ::std::os::raw::c_uint;
            pub const LocationEnum_CameraLocationFront: root::libcamera::properties::LocationEnum = 0;
            pub const LocationEnum_CameraLocationBack: root::libcamera::properties::LocationEnum = 1;
            pub const LocationEnum_CameraLocationExternal: root::libcamera::properties::LocationEnum = 2;
            pub type LocationEnum = ::std::os::raw::c_uint;
            pub mod draft {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                pub const draft_COLOR_FILTER_ARRANGEMENT: root::libcamera::properties::draft::_bindgen_ty_1 = 10001;
                pub type _bindgen_ty_1 = ::std::os::raw::c_uint;
                pub const ColorFilterArrangementEnum_RGGB:
                    root::libcamera::properties::draft::ColorFilterArrangementEnum = 0;
                pub const ColorFilterArrangementEnum_GRBG:
                    root::libcamera::properties::draft::ColorFilterArrangementEnum = 1;
                pub const ColorFilterArrangementEnum_GBRG:
                    root::libcamera::properties::draft::ColorFilterArrangementEnum = 2;
                pub const ColorFilterArrangementEnum_BGGR:
                    root::libcamera::properties::draft::ColorFilterArrangementEnum = 3;
                pub const ColorFilterArrangementEnum_RGB:
                    root::libcamera::properties::draft::ColorFilterArrangementEnum = 4;
                pub const ColorFilterArrangementEnum_MONO:
                    root::libcamera::properties::draft::ColorFilterArrangementEnum = 5;
                pub type ColorFilterArrangementEnum = ::std::os::raw::c_uint;
            }
        }
    }
}
